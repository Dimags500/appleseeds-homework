Question 1:
In your own words what will this point to and why?(Note 
this is the global scope)
console.log(this);

in this case we run function in global scope , 
so this point to object that the function is running in  , 
si window object in this 

the object that call the function is window , so in this case 
window object will be log  


-----------------------------------------------------------
Question 2:
a. In your own words what will this point to and why.
b. How can you fix this code.


const myObj = {
  name: "Timmy",
  greet: () => {
    console.log(`Hello ${this.name}`);
  },
};
myObj.greet();



we will get undifind , becuse arrow function does't have this 
it will go to the parent object ,and search propery name ther 


------------------------------------------------------------
Question 3:
In your own words what will this point to and why?

const myFuncDec = function () {
  console.log(this);
};

in this case myFuncDec is in global scope , so will log window object , if we call it 


------------------------------------------------------------
Question 4:
In your own words what will this point to and why?


const myFuncArrow = () => {
  console.log(this);
};
myFuncArrow();


we call it from window , it shood log  window object 

------------------------------------------------------------
Question 5:
a. In your own words what will this point to and why.
b. How can you fix this code.

document.querySelector(".element").addEventListener(() => {
  console.log(this);
});

use regular function ,arrow function does't hold this 